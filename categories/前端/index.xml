<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on 么了&#39;s 博客</title>
    <link>/categories/%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 前端 on 么了&#39;s 博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Tue, 25 Feb 2020 13:13:40 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Http和Https</title>
      <link>/blog/http/</link>
      <pubDate>Tue, 25 Feb 2020 13:13:40 +0800</pubDate>
      
      <guid>/blog/http/</guid>
      <description>HTTP协议（HyperText Transfer Protocol超文本传输协议）是因特网上应用最广泛的一种网络协议，所有www文件都必须遵守这个标准。 HTTP是一个基于TCP/IP通信协议来传递数据。  HTTP工作原理 HTTP协议工作于客户端—服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端（web服务器）发送所有请求。 web服务器根据接受的请求，向客户端发送响应信息。 HTTP默认端口：80，也可以改为8080或者其他端口。  ⚠️注意事项：
 HTTP是无连接：无连接就是限制每次连接只处理一个请求，并收到客户的应答后即断开。采用这种方式可以节省传输时间。 HTTP是媒体独立的：只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送 HTTP是无状态：无状态是指协议对于事物处理没有记忆能力。缺少状态意味着如果后续处理需要之前的信息，则必须重新传，导致每次连接传送的数据量增大  通信流程： Web Browser网络浏览器 &amp;lt;—— HTTP协议 ——&amp;gt; HTTP Server &amp;lt;———&amp;gt; CGI Program(Common Gateway Interface通用网关接口) &amp;lt;———&amp;gt; Database数据库
HTTP请求方法 1.0： GET，POST，HEAD 1.1：OPTIONS，PUT，PATCH，DELETE，TRACE和CONNECT
状态码 200 — 请求成功 301 — 资源被永久转移到其它URL 404 — 请求的资源不存在 500 — 内部服务器错误
 HTTPS HTTPS（Hyper Text Transfer Protocol over SecureSocket Layer）超文本传输安全协议， 是以安全为目标的通道，在http的基础上通过传输加密和身份验证保证了传输过程的安全性。HTTP+SSL层。 主要通过数字认证、加密算法、非对称密钥等技术完成数据加密实现互联网传输安全保护，主要设计目标：   数据保密性：保证数据内容在传输过程中不会被第三方查看 数据完整性：及时发现被第三方篡改的传输内容，如果调包，能轻松发现并拒收 身份校验安全性：保证数据到达期望的目的地   优缺点   确保数据发送到正确的客户机和服务器</description>
    </item>
    
    <item>
      <title>Axios笔记</title>
      <link>/blog/axios-note/</link>
      <pubDate>Sat, 22 Feb 2020 18:22:40 +0800</pubDate>
      
      <guid>/blog/axios-note/</guid>
      <description>Axios笔记 this.$axios.get(’/toutiao/index’, { //::这里设置域名参数:: params:{ key:’4ac7dbb103ad3977c50735edb9651431’, type:’tiyu’ }, //请求头配置 headers: {&#39;token&#39;:token } }) .then(res =&amp;gt; { this.newsList= res.data console.log(this.newsList) }) .catch( err=&amp;gt; { console.log(’新闻异常’) })  Axios 是一个基于 promise 的 HTTP 库 其特性：
 可以在浏览器中发送 XMLHttpRequests 可以在 node.js 中发送 http 请求 支持 Promise API 拦截请求和响应 能取消请求 转换请求数据和相应数据 自动转换 Json 数据 客户端支持保护安全免受 XSRF 攻击  </description>
    </item>
    
  </channel>
</rss>